apiVersion: v1
kind: ConfigMap

metadata:
  name: shopapi-cm-{{ .Values.environment }}

data:
  DB_HOST: {{ .Values.database.host }}
  DB_NAME: {{ .Values.database.db_name }}
  DB_USER: {{ .Values.database.user }}
  RAILS_ENV: production
  RAILS_LOG_TO_STDOUT: "1"

---

apiVersion: v1
kind: Secret

metadata:
  name: shopapi-sec-{{ .Values.environment }}

type: Opaque

data:
  DB_PASSWORD: {{ .Values.database.password }}

---

apiVersion: batch/v1
kind: Job

metadata:
  name: shopapi-job-dbc-{{ .Values.environment }}
  labels:
    app: shopapi-db-{{ .Values.environment }}

spec:
  template:
    metadata:
      labels:
        group: shopapi-db-{{ .Values.environment }}
    spec:
      containers:
      - name: shopapi-db-{{ .Values.environment }}
        image: devteds/demo-bookstore-shopapi:1.0
        imagePullPolicy: Always
        command: ["bundle", "exec", "rails", "db:migrate"]
        volumeMounts:
        - name: secret-vol-{{ .Values.environment }}
          mountPath: /app/config/app_secret
        envFrom:
        - configMapRef:
            name: shopapi-cm-{{ .Values.environment }}
      volumes:
        - name: secret-vol-{{ .Values.environment }}
          secret:
            secretName: shopapi-sec-{{ .Values.environment }}
      restartPolicy: Never
  backoffLimit: 4

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: shopapi-{{ .Values.environment }}
spec:
  selector:
    matchLabels:
      app: shopapi-{{ .Values.environment }}
  replicas: {{ .Values.deployment.replica_count }}

  template:
    metadata:
      labels:
        app: shopapi-{{ .Values.environment }}
    spec:
      containers:
      - name: shopapi-{{ .Values.environment }}
        image: devteds/demo-bookstore-shopapi:1.0
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.deployment.containerPort }}
        volumeMounts:
        - name: secret-vol-{{ .Values.environment }}
          mountPath: /app/config/app_secret        
        envFrom:
        - configMapRef:
            name: shopapi-cm-{{ .Values.environment }}
      volumes:
        - name: secret-vol-{{ .Values.environment }}
          secret:
            secretName: shopapi-sec-{{ .Values.environment }}

---

apiVersion: v1
kind: Service

metadata:
  name: shopapi-{{ .Values.environment }}
  labels:
    app: shopapi-{{ .Values.environment }}

spec:
  
  selector:
    app: shopapi-{{ .Values.environment }}

  ports:
  - port: {{ .Values.service.port }}


---

# ingress

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress-{{ .Values.environment }}
spec:
  ingressClassName: nginx
  rules:
  - host: # Add host if applicable
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: website-{{ .Values.environment }}
            port:
              number: 80
      - path: /api/books
        pathType: Prefix
        backend:
          service:
            name: shopapi-{{ .Values.environment }}
            port:
              number: 3000
      - path: /shop
        pathType: Prefix
        backend:
          service:
            name: shopui-{{ .Values.environment }}
            port:
              number: 80
